// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SimpleBotScenario.Persistence;

#nullable disable

namespace SimpleBotScenario.Persistence.Migrations
{
    [DbContext(typeof(SimpleBotScenarioDbContext))]
    partial class SimpleBotScenarioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SimpleBotScenario.Domain.Entities.Bot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("token");

                    b.HasKey("Id")
                        .HasName("PK_bots_id");

                    b.HasIndex("Token")
                        .IsUnique()
                        .HasDatabaseName("UX_bots_token");

                    b.ToTable("bots", (string)null);
                });

            modelBuilder.Entity("SimpleBotScenario.Domain.Entities.Chat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ExternalId")
                        .HasColumnType("bigint")
                        .HasColumnName("external_id");

                    b.Property<int>("bot_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("PK_chats_id");

                    b.HasIndex("ExternalId")
                        .HasDatabaseName("IX_chats_external_id");

                    b.HasIndex("bot_id");

                    b.ToTable("chats", (string)null);
                });

            modelBuilder.Entity("SimpleBotScenario.Domain.Entities.ChatParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("ExternalId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK_chat_participants_id");

                    b.ToTable("chat_participants", (string)null);
                });

            modelBuilder.Entity("SimpleBotScenario.Domain.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChatParticipantId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("DateTimeUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_time_utc");

                    b.Property<int>("ExternalId")
                        .HasColumnType("integer")
                        .HasColumnName("external_id");

                    b.Property<string>("Text")
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<long>("chat_id")
                        .HasColumnType("bigint");

                    b.Property<int?>("chat_participant_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("PK_messages_id");

                    b.HasIndex("ChatParticipantId");

                    b.HasIndex("ExternalId")
                        .HasDatabaseName("IX_messages_external_id");

                    b.HasIndex("chat_id");

                    b.HasIndex("chat_participant_id");

                    b.ToTable("messages", (string)null);
                });

            modelBuilder.Entity("SimpleBotScenario.Domain.Entities.Chat", b =>
                {
                    b.HasOne("SimpleBotScenario.Domain.Entities.Bot", null)
                        .WithMany("Chats")
                        .HasForeignKey("bot_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_chats_messages");
                });

            modelBuilder.Entity("SimpleBotScenario.Domain.Entities.Message", b =>
                {
                    b.HasOne("SimpleBotScenario.Domain.Entities.ChatParticipant", "ChatParticipant")
                        .WithMany()
                        .HasForeignKey("ChatParticipantId");

                    b.HasOne("SimpleBotScenario.Domain.Entities.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("chat_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_chats_messages");

                    b.HasOne("SimpleBotScenario.Domain.Entities.ChatParticipant", null)
                        .WithMany("Messages")
                        .HasForeignKey("chat_participant_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_messages_chat_participants");

                    b.Navigation("Chat");

                    b.Navigation("ChatParticipant");
                });

            modelBuilder.Entity("SimpleBotScenario.Domain.Entities.Bot", b =>
                {
                    b.Navigation("Chats");
                });

            modelBuilder.Entity("SimpleBotScenario.Domain.Entities.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("SimpleBotScenario.Domain.Entities.ChatParticipant", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
